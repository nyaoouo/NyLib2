from .utils import *

_dll = ctypes.WinDLL('kernel32.dll')
GetCurrentProcess = def_win_api(_dll.GetCurrentProcess, ctypes.c_void_p, (), error_zero=True)
CreateToolhelp32Snapshot = def_win_api(_dll.CreateToolhelp32Snapshot, HANDLE, (ctypes.c_ulong, ctypes.c_ulong), error_val=INVALID_HANDLE_VALUE)
Process32First = def_win_api(_dll.Process32First, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
Process32Next = def_win_api(_dll.Process32Next, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
CloseHandle = def_win_api(_dll.CloseHandle, ctypes.c_bool, (ctypes.c_void_p,), error_zero=True)
OpenProcess = def_win_api(_dll.OpenProcess, ctypes.c_void_p, (ctypes.c_ulong, ctypes.c_bool, ctypes.c_ulong), error_zero=True)
CreateRemoteThread = def_win_api(_dll.CreateRemoteThread, ctypes.c_void_p, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_ulong, ctypes.c_void_p), error_zero=True)
ReadProcessMemory = def_win_api(_dll.ReadProcessMemory, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t, ctypes.c_void_p), error_zero=True)
WriteProcessMemory = def_win_api(_dll.WriteProcessMemory, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t, ctypes.c_void_p), error_zero=True)
VirtualAllocEx = def_win_api(_dll.VirtualAllocEx, ctypes.c_void_p, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t, ctypes.c_ulong, ctypes.c_ulong), error_zero=True)
VirtualFreeEx = def_win_api(_dll.VirtualFreeEx, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t, ctypes.c_ulong), error_zero=True)
VirtualProtectEx = def_win_api(_dll.VirtualProtectEx, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t, ctypes.c_ulong, ctypes.c_void_p), error_zero=True)
VirtualQueryEx = def_win_api(_dll.VirtualQueryEx, ctypes.c_size_t, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t), error_zero=True)
GetProcAddress = def_win_api(_dll.GetProcAddress, ctypes.c_void_p, (ctypes.c_void_p, ctypes.c_char_p), error_zero=True)
GetModuleHandle = def_win_api(_dll.GetModuleHandleW, ctypes.c_size_t, (ctypes.c_wchar_p,), error_zero=True)
GetCurrentProcessId = def_win_api(_dll.GetCurrentProcessId, ctypes.c_ulong, (), error_zero=True)
WaitForSingleObject = def_win_api(_dll.WaitForSingleObject, HANDLE, (ctypes.c_void_p, ctypes.c_ulong), error_val=INVALID_HANDLE_VALUE)
CreateEvent = def_win_api(_dll.CreateEventW, HANDLE, (ctypes.c_void_p, ctypes.c_bool, ctypes.c_bool, ctypes.c_wchar_p), error_val=INVALID_HANDLE_VALUE)
WriteFile = def_win_api(_dll.WriteFile, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_char_p, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
ReadFile = def_win_api(_dll.ReadFile, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
GetOverlappedResult = def_win_api(_dll.GetOverlappedResult, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_bool), error_zero=True)
CreateNamedPipe = def_win_api(_dll.CreateNamedPipeW, ctypes.c_void_p, (ctypes.c_wchar_p, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_void_p), error_val=INVALID_HANDLE_VALUE)
ConnectNamedPipe = def_win_api(_dll.ConnectNamedPipe, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
CreateFile = def_win_api(_dll.CreateFileW, ctypes.c_void_p, (ctypes.c_wchar_p, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_ulong, ctypes.c_ulong, ctypes.c_void_p), error_val=INVALID_HANDLE_VALUE)
SetNamedPipeHandleState = def_win_api(_dll.SetNamedPipeHandleState, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
DeviceIoControl = def_win_api(_dll.DeviceIoControl, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_void_p,), error_zero=True)
GetFileAttributesW = def_win_api(_dll.GetFileAttributesW, ctypes.c_ulong, (ctypes.c_wchar_p,), error_val=0xFFFFFFFF)
GetExitCodeProcess = def_win_api(_dll.GetExitCodeProcess, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
GlobalAlloc = def_win_api(_dll.GlobalAlloc, ctypes.c_void_p, (ctypes.c_uint, ctypes.c_size_t), error_zero=True)
GlobalLock = def_win_api(_dll.GlobalLock, ctypes.c_void_p, (ctypes.c_void_p,), error_zero=True)
GlobalUnlock = def_win_api(_dll.GlobalUnlock, ctypes.c_bool, (ctypes.c_void_p,))
TerminateProcess = def_win_api(_dll.TerminateProcess, ctypes.c_bool, (ctypes.c_void_p, ctypes.c_uint), error_zero=True)
ExpandEnvironmentStringsW = def_win_api(_dll.ExpandEnvironmentStringsW, ctypes.c_ulong, (ctypes.c_wchar_p, ctypes.c_wchar_p, ctypes.c_ulong), error_zero=True)
CreateProcessA = def_win_api(_dll.CreateProcessA, ctypes.c_bool, (ctypes.c_char_p, ctypes.c_char_p, ctypes.c_void_p, ctypes.c_void_p, ctypes.c_bool, ctypes.c_ulong, ctypes.c_void_p, ctypes.c_char_p, ctypes.c_void_p, ctypes.c_void_p), error_zero=True)
ResumeThread = def_win_api(_dll.ResumeThread, ctypes.c_ulong, (ctypes.c_void_p,))
