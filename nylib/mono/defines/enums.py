import enum


class MonoTypeEnum(enum.IntEnum):
    END = 0x00  # End of List
    VOID = 0x01
    BOOLEAN = 0x02
    CHAR = 0x03
    I1 = 0x04
    U1 = 0x05
    I2 = 0x06
    U2 = 0x07
    I4 = 0x08
    U4 = 0x09
    I8 = 0x0a
    U8 = 0x0b
    R4 = 0x0c
    R8 = 0x0d
    STRING = 0x0e
    PTR = 0x0f  # arg: <type> token
    BYREF = 0x10  # arg: <type> token
    VALUETYPE = 0x11  # arg: <type> token
    CLASS = 0x12  # arg: <type> token
    VAR = 0x13  # number
    ARRAY = 0x14  # type, rank, boundsCount, bound1, loCount, lo1
    GENERICINST = 0x15  # <type> <type-arg-count> <type-1> \x{2026} <type-n>
    TYPEDBYREF = 0x16
    I = 0x18
    U = 0x19
    FNPTR = 0x1b  # arg: full method signature
    OBJECT = 0x1c
    SZARRAY = 0x1d  # 0-based one-dim-array
    MVAR = 0x1e  # number
    CMOD_REQD = 0x1f  # arg: typedef or typeref token
    CMOD_OPT = 0x20  # optional arg: typedef or typref token
    INTERNAL = 0x21  # CLR internal type

    MODIFIER = 0x40  # Or with the following types
    SENTINEL = 0x41  # Sentinel for varargs method signature
    PINNED = 0x45  # Local var that points to pinned object

    ENUM = 0x55  # an enumeration


MONO_TYPE_END = MonoTypeEnum.END
MONO_TYPE_VOID = MonoTypeEnum.VOID
MONO_TYPE_BOOLEAN = MonoTypeEnum.BOOLEAN
MONO_TYPE_CHAR = MonoTypeEnum.CHAR
MONO_TYPE_I1 = MonoTypeEnum.I1
MONO_TYPE_U1 = MonoTypeEnum.U1
MONO_TYPE_I2 = MonoTypeEnum.I2
MONO_TYPE_U2 = MonoTypeEnum.U2
MONO_TYPE_I4 = MonoTypeEnum.I4
MONO_TYPE_U4 = MonoTypeEnum.U4
MONO_TYPE_I8 = MonoTypeEnum.I8
MONO_TYPE_U8 = MonoTypeEnum.U8
MONO_TYPE_R4 = MonoTypeEnum.R4
MONO_TYPE_R8 = MonoTypeEnum.R8
MONO_TYPE_STRING = MonoTypeEnum.STRING
MONO_TYPE_PTR = MonoTypeEnum.PTR
MONO_TYPE_BYREF = MonoTypeEnum.BYREF
MONO_TYPE_VALUETYPE = MonoTypeEnum.VALUETYPE
MONO_TYPE_CLASS = MonoTypeEnum.CLASS
MONO_TYPE_VAR = MonoTypeEnum.VAR
MONO_TYPE_ARRAY = MonoTypeEnum.ARRAY
MONO_TYPE_GENERICINST = MonoTypeEnum.GENERICINST
MONO_TYPE_TYPEDBYREF = MonoTypeEnum.TYPEDBYREF
MONO_TYPE_I = MonoTypeEnum.I
MONO_TYPE_U = MonoTypeEnum.U
MONO_TYPE_FNPTR = MonoTypeEnum.FNPTR
MONO_TYPE_OBJECT = MonoTypeEnum.OBJECT
MONO_TYPE_SZARRAY = MonoTypeEnum.SZARRAY
MONO_TYPE_MVAR = MonoTypeEnum.MVAR
MONO_TYPE_CMOD_REQD = MonoTypeEnum.CMOD_REQD
MONO_TYPE_CMOD_OPT = MonoTypeEnum.CMOD_OPT
MONO_TYPE_INTERNAL = MonoTypeEnum.INTERNAL
MONO_TYPE_MODIFIER = MonoTypeEnum.MODIFIER
MONO_TYPE_SENTINEL = MonoTypeEnum.SENTINEL
MONO_TYPE_PINNED = MonoTypeEnum.PINNED
MONO_TYPE_ENUM = MonoTypeEnum.ENUM


class MonoMetaTableEnum(enum.IntEnum):
    MODULE = 0
    TYPEREF = enum.auto()
    TYPEDEF = enum.auto()
    FIELD_POINTER = enum.auto()
    FIELD = enum.auto()
    METHOD_POINTER = enum.auto()
    METHOD = enum.auto()
    PARAM_POINTER = enum.auto()
    PARAM = enum.auto()
    INTERFACEIMPL = enum.auto()
    MEMBERREF = enum.auto()  # 0xa
    CONSTANT = enum.auto()
    CUSTOMATTRIBUTE = enum.auto()
    FIELDMARSHAL = enum.auto()
    DECLSECURITY = enum.auto()
    CLASSLAYOUT = enum.auto()
    FIELDLAYOUT = enum.auto()  # 0x10
    STANDALONESIG = enum.auto()
    EVENTMAP = enum.auto()
    EVENT_POINTER = enum.auto()
    EVENT = enum.auto()
    PROPERTYMAP = enum.auto()
    PROPERTY_POINTER = enum.auto()
    PROPERTY = enum.auto()
    METHODSEMANTICS = enum.auto()
    METHODIMPL = enum.auto()
    MODULEREF = enum.auto()  # 0x1a
    TYPESPEC = enum.auto()
    IMPLMAP = enum.auto()
    FIELDRVA = enum.auto()
    ENCLOG = enum.auto()
    ENCMAP = enum.auto()
    ASSEMBLY = enum.auto()  # 0x20
    ASSEMBLYPROCESSOR = enum.auto()
    ASSEMBLYOS = enum.auto()
    ASSEMBLYREF = enum.auto()
    ASSEMBLYREFPROCESSOR = enum.auto()
    ASSEMBLYREFOS = enum.auto()
    FILE = enum.auto()
    EXPORTEDTYPE = enum.auto()
    MANIFESTRESOURCE = enum.auto()
    NESTEDCLASS = enum.auto()
    GENERICPARAM = enum.auto()  # 0x2a
    METHODSPEC = enum.auto()
    GENERICPARAMCONSTRAINT = enum.auto()
    UNUSED8 = enum.auto()
    UNUSED9 = enum.auto()
    UNUSED10 = enum.auto()
    # Portable PDB tables
    DOCUMENT = enum.auto()  # 0x30
    METHODBODY = enum.auto()
    LOCALSCOPE = enum.auto()
    LOCALVARIABLE = enum.auto()
    LOCALCONSTANT = enum.auto()
    IMPORTSCOPE = enum.auto()
    STATEMACHINEMETHOD = enum.auto()
    CUSTOMDEBUGINFORMATION = enum.auto()


MONO_TABLE_MODULE = MonoMetaTableEnum.MODULE
MONO_TABLE_TYPEREF = MonoMetaTableEnum.TYPEREF
MONO_TABLE_TYPEDEF = MonoMetaTableEnum.TYPEDEF
MONO_TABLE_FIELD_POINTER = MonoMetaTableEnum.FIELD_POINTER
MONO_TABLE_FIELD = MonoMetaTableEnum.FIELD
MONO_TABLE_METHOD_POINTER = MonoMetaTableEnum.METHOD_POINTER
MONO_TABLE_METHOD = MonoMetaTableEnum.METHOD
MONO_TABLE_PARAM_POINTER = MonoMetaTableEnum.PARAM_POINTER
MONO_TABLE_PARAM = MonoMetaTableEnum.PARAM
MONO_TABLE_INTERFACEIMPL = MonoMetaTableEnum.INTERFACEIMPL
MONO_TABLE_MEMBERREF = MonoMetaTableEnum.MEMBERREF
MONO_TABLE_CONSTANT = MonoMetaTableEnum.CONSTANT
MONO_TABLE_CUSTOMATTRIBUTE = MonoMetaTableEnum.CUSTOMATTRIBUTE
MONO_TABLE_FIELDMARSHAL = MonoMetaTableEnum.FIELDMARSHAL
MONO_TABLE_DECLSECURITY = MonoMetaTableEnum.DECLSECURITY
MONO_TABLE_CLASSLAYOUT = MonoMetaTableEnum.CLASSLAYOUT
MONO_TABLE_FIELDLAYOUT = MonoMetaTableEnum.FIELDLAYOUT
MONO_TABLE_STANDALONESIG = MonoMetaTableEnum.STANDALONESIG
MONO_TABLE_EVENTMAP = MonoMetaTableEnum.EVENTMAP
MONO_TABLE_EVENT_POINTER = MonoMetaTableEnum.EVENT_POINTER
MONO_TABLE_EVENT = MonoMetaTableEnum.EVENT
MONO_TABLE_PROPERTYMAP = MonoMetaTableEnum.PROPERTYMAP
MONO_TABLE_PROPERTY_POINTER = MonoMetaTableEnum.PROPERTY_POINTER
MONO_TABLE_PROPERTY = MonoMetaTableEnum.PROPERTY
MONO_TABLE_METHODSEMANTICS = MonoMetaTableEnum.METHODSEMANTICS
MONO_TABLE_METHODIMPL = MonoMetaTableEnum.METHODIMPL
MONO_TABLE_MODULEREF = MonoMetaTableEnum.MODULEREF
MONO_TABLE_TYPESPEC = MonoMetaTableEnum.TYPESPEC
MONO_TABLE_IMPLMAP = MonoMetaTableEnum.IMPLMAP
MONO_TABLE_FIELDRVA = MonoMetaTableEnum.FIELDRVA
MONO_TABLE_ENCLOG = MonoMetaTableEnum.ENCLOG
MONO_TABLE_ENCMAP = MonoMetaTableEnum.ENCMAP
MONO_TABLE_ASSEMBLY = MonoMetaTableEnum.ASSEMBLY
MONO_TABLE_ASSEMBLYPROCESSOR = MonoMetaTableEnum.ASSEMBLYPROCESSOR
MONO_TABLE_ASSEMBLYOS = MonoMetaTableEnum.ASSEMBLYOS
MONO_TABLE_ASSEMBLYREF = MonoMetaTableEnum.ASSEMBLYREF
MONO_TABLE_ASSEMBLYREFPROCESSOR = MonoMetaTableEnum.ASSEMBLYREFPROCESSOR
MONO_TABLE_ASSEMBLYREFOS = MonoMetaTableEnum.ASSEMBLYREFOS
MONO_TABLE_FILE = MonoMetaTableEnum.FILE
MONO_TABLE_EXPORTEDTYPE = MonoMetaTableEnum.EXPORTEDTYPE
MONO_TABLE_MANIFESTRESOURCE = MonoMetaTableEnum.MANIFESTRESOURCE
MONO_TABLE_NESTEDCLASS = MonoMetaTableEnum.NESTEDCLASS
MONO_TABLE_GENERICPARAM = MonoMetaTableEnum.GENERICPARAM
MONO_TABLE_METHODSPEC = MonoMetaTableEnum.METHODSPEC
MONO_TABLE_GENERICPARAMCONSTRAINT = MonoMetaTableEnum.GENERICPARAMCONSTRAINT
MONO_TABLE_UNUSED8 = MonoMetaTableEnum.UNUSED8
MONO_TABLE_UNUSED9 = MonoMetaTableEnum.UNUSED9
MONO_TABLE_UNUSED10 = MonoMetaTableEnum.UNUSED10
MONO_TABLE_DOCUMENT = MonoMetaTableEnum.DOCUMENT
MONO_TABLE_METHODBODY = MonoMetaTableEnum.METHODBODY
MONO_TABLE_LOCALSCOPE = MonoMetaTableEnum.LOCALSCOPE
MONO_TABLE_LOCALVARIABLE = MonoMetaTableEnum.LOCALVARIABLE
MONO_TABLE_LOCALCONSTANT = MonoMetaTableEnum.LOCALCONSTANT
MONO_TABLE_IMPORTSCOPE = MonoMetaTableEnum.IMPORTSCOPE
MONO_TABLE_STATEMACHINEMETHOD = MonoMetaTableEnum.STATEMACHINEMETHOD
MONO_TABLE_CUSTOMDEBUGINFORMATION = MonoMetaTableEnum.CUSTOMDEBUGINFORMATION


class MONO_TYPEDEF_(enum.IntEnum):
    FLAGS = 0
    NAME = enum.auto()
    NAMESPACE = enum.auto()
    EXTENDS = enum.auto()
    FIELD_LIST = enum.auto()
    METHOD_LIST = enum.auto()
    SIZE = enum.auto()


MONO_TYPEDEF_FLAGS = MONO_TYPEDEF_.FLAGS
MONO_TYPEDEF_NAME = MONO_TYPEDEF_.NAME
MONO_TYPEDEF_NAMESPACE = MONO_TYPEDEF_.NAMESPACE
MONO_TYPEDEF_EXTENDS = MONO_TYPEDEF_.EXTENDS
MONO_TYPEDEF_FIELD_LIST = MONO_TYPEDEF_.FIELD_LIST
MONO_TYPEDEF_METHOD_LIST = MONO_TYPEDEF_.METHOD_LIST
MONO_TYPEDEF_SIZE = MONO_TYPEDEF_.SIZE


class MONO_METHOD_(enum.IntEnum):
    RVA = 0
    IMPLFLAGS = enum.auto()
    FLAGS = enum.auto()
    NAME = enum.auto()
    SIGNATURE = enum.auto()
    PARAMLIST = enum.auto()
    SIZE = enum.auto()


MONO_METHOD_RVA = MONO_METHOD_.RVA
MONO_METHOD_IMPLFLAGS = MONO_METHOD_.IMPLFLAGS
MONO_METHOD_FLAGS = MONO_METHOD_.FLAGS
MONO_METHOD_NAME = MONO_METHOD_.NAME
MONO_METHOD_SIGNATURE = MONO_METHOD_.SIGNATURE
MONO_METHOD_PARAMLIST = MONO_METHOD_.PARAMLIST
MONO_METHOD_SIZE = MONO_METHOD_.SIZE


class MonoTokenType(enum.IntEnum):
    MODULE = 0x00000000
    TYPE_REF = 0x01000000
    TYPE_DEF = 0x02000000
    FIELD_DEF = 0x04000000
    METHOD_DEF = 0x06000000
    PARAM_DEF = 0x08000000
    INTERFACE_IMPL = 0x09000000
    MEMBER_REF = 0x0a000000
    CUSTOM_ATTRIBUTE = 0x0c000000
    PERMISSION = 0x0e000000
    SIGNATURE = 0x11000000
    EVENT = 0x14000000
    PROPERTY = 0x17000000
    MODULE_REF = 0x1a000000
    TYPE_SPEC = 0x1b000000
    ASSEMBLY = 0x20000000
    ASSEMBLY_REF = 0x23000000
    FILE = 0x26000000
    EXPORTED_TYPE = 0x27000000
    MANIFEST_RESOURCE = 0x28000000
    GENERIC_PARAM = 0x2a000000
    METHOD_SPEC = 0x2b000000
    # These do not match metadata tables directly
    STRING = 0x70000000
    NAME = 0x71000000
    BASE_TYPE = 0x72000000


MONO_TOKEN_MODULE = MonoTokenType.MODULE
MONO_TOKEN_TYPE_REF = MonoTokenType.TYPE_REF
MONO_TOKEN_TYPE_DEF = MonoTokenType.TYPE_DEF
MONO_TOKEN_FIELD_DEF = MonoTokenType.FIELD_DEF
MONO_TOKEN_METHOD_DEF = MonoTokenType.METHOD_DEF
MONO_TOKEN_PARAM_DEF = MonoTokenType.PARAM_DEF
MONO_TOKEN_INTERFACE_IMPL = MonoTokenType.INTERFACE_IMPL
MONO_TOKEN_MEMBER_REF = MonoTokenType.MEMBER_REF
MONO_TOKEN_CUSTOM_ATTRIBUTE = MonoTokenType.CUSTOM_ATTRIBUTE
MONO_TOKEN_PERMISSION = MonoTokenType.PERMISSION
MONO_TOKEN_SIGNATURE = MonoTokenType.SIGNATURE
MONO_TOKEN_EVENT = MonoTokenType.EVENT
MONO_TOKEN_PROPERTY = MonoTokenType.PROPERTY
MONO_TOKEN_MODULE_REF = MonoTokenType.MODULE_REF
MONO_TOKEN_TYPE_SPEC = MonoTokenType.TYPE_SPEC
MONO_TOKEN_ASSEMBLY = MonoTokenType.ASSEMBLY
MONO_TOKEN_ASSEMBLY_REF = MonoTokenType.ASSEMBLY_REF
MONO_TOKEN_FILE = MonoTokenType.FILE
MONO_TOKEN_EXPORTED_TYPE = MonoTokenType.EXPORTED_TYPE
MONO_TOKEN_MANIFEST_RESOURCE = MonoTokenType.MANIFEST_RESOURCE
MONO_TOKEN_GENERIC_PARAM = MonoTokenType.GENERIC_PARAM
MONO_TOKEN_METHOD_SPEC = MonoTokenType.METHOD_SPEC
MONO_TOKEN_STRING = MonoTokenType.STRING
MONO_TOKEN_NAME = MonoTokenType.NAME
MONO_TOKEN_BASE_TYPE = MonoTokenType.BASE_TYPE


class MONO_FIELD_ATTR_(enum.IntEnum):
    FIELD_ACCESS_MASK = 0x0007
    COMPILER_CONTROLLED = 0x0000
    PRIVATE = 0x0001
    FAM_AND_ASSEM = 0x0002
    ASSEMBLY = 0x0003
    FAMILY = 0x0004
    FAM_OR_ASSEM = 0x0005
    PUBLIC = 0x0006
    STATIC = 0x0010
    INIT_ONLY = 0x0020
    LITERAL = 0x0040
    NOT_SERIALIZED = 0x0080
    SPECIAL_NAME = 0x0200
    PINVOKE_IMPL = 0x2000
    # For runtime use only
    RESERVED_MASK = 0x9500
    RT_SPECIAL_NAME = 0x0400
    HAS_MARSHAL = 0x1000
    HAS_DEFAULT = 0x8000
    HAS_RVA = 0x0100


MONO_FIELD_ATTR_FIELD_ACCESS_MASK = MONO_FIELD_ATTR_.FIELD_ACCESS_MASK
MONO_FIELD_ATTR_COMPILER_CONTROLLED = MONO_FIELD_ATTR_.COMPILER_CONTROLLED
MONO_FIELD_ATTR_PRIVATE = MONO_FIELD_ATTR_.PRIVATE
MONO_FIELD_ATTR_FAM_AND_ASSEM = MONO_FIELD_ATTR_.FAM_AND_ASSEM
MONO_FIELD_ATTR_ASSEMBLY = MONO_FIELD_ATTR_.ASSEMBLY
MONO_FIELD_ATTR_FAMILY = MONO_FIELD_ATTR_.FAMILY
MONO_FIELD_ATTR_FAM_OR_ASSEM = MONO_FIELD_ATTR_.FAM_OR_ASSEM
MONO_FIELD_ATTR_PUBLIC = MONO_FIELD_ATTR_.PUBLIC
MONO_FIELD_ATTR_STATIC = MONO_FIELD_ATTR_.STATIC
MONO_FIELD_ATTR_INIT_ONLY = MONO_FIELD_ATTR_.INIT_ONLY
MONO_FIELD_ATTR_LITERAL = MONO_FIELD_ATTR_.LITERAL
MONO_FIELD_ATTR_NOT_SERIALIZED = MONO_FIELD_ATTR_.NOT_SERIALIZED
MONO_FIELD_ATTR_SPECIAL_NAME = MONO_FIELD_ATTR_.SPECIAL_NAME
MONO_FIELD_ATTR_PINVOKE_IMPL = MONO_FIELD_ATTR_.PINVOKE_IMPL
MONO_FIELD_ATTR_RESERVED_MASK = MONO_FIELD_ATTR_.RESERVED_MASK
MONO_FIELD_ATTR_RT_SPECIAL_NAME = MONO_FIELD_ATTR_.RT_SPECIAL_NAME
MONO_FIELD_ATTR_HAS_MARSHAL = MONO_FIELD_ATTR_.HAS_MARSHAL
MONO_FIELD_ATTR_HAS_DEFAULT = MONO_FIELD_ATTR_.HAS_DEFAULT
MONO_FIELD_ATTR_HAS_RVA = MONO_FIELD_ATTR_.HAS_RVA
